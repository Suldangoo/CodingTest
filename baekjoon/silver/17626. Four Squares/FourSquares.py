# 17626. Four Squares (실버 3)
# 알고리즘 분류 : 다이나믹 프로그래밍, 브루트포스 알고리즘

n = int(input()) # 정수 n 입력

# dp 배열 생성, 존재 가능한 최댓값이 4이므로 전부 4로 할당
# dp[i]는 i를 제곱수의 합으로 나타내기 위해 필요한 최소 제곱수의 개수, 즉 답
dp = [4 for i in range(n + 1)]

dp[0] = 0 # 0은 제곱수의 합으로 표현할 수 없으므로, dp[0]은 0으로 설정

# 브루트포스 알고리즘을 사용하여 각 정수의 제곱수 합을 구하고, 그 값을 DP로 사용
# ? + 1^2 비교 / ? + 2^2 비교 / ? + 3^2 비교...

for i in range(1, n + 1): # 1부터 n까지의 수에 대해 반복
    for j in range(1, i + 1): # 1부터 i까지의 수에 대해 반복
        val = j * j # 제곱수 계산
        if val > i: # 현재 제곱수가 i보다 크다면, 더 이상 합으로 표현할 수 없으므로 반복문 종료
            break
        dp[i] = min(dp[i], dp[i - val] + 1) # dp[i] 갱신. 기존의 dp[i]와 (dp[i - val] + 1) 중 작은 값으로 설정

print(dp[n])