# 11726. 2 x n 타일링 (실버 3)
# 알고리즘 분류 : 다이나믹 프로그래밍

n = int(input())

# 2 x 1 일 때 존재 가능한 경우의 수는 1
# 2 x 2 일 때 존재 가능한 경우의 수는 2
# 2 x 3 일 때 존재 가능한 경우의 수는 3...
# 즉, 피보나치 수열의 형태를 따름

nums = [0, 1, 2]

for i in range(n - 2) :
    # 숫자가 너무 커지면 int의 범위를 초과해버리므로 10007로 나눈 나머지 값을 저장
    nums.append((nums[-1] + nums[-2]) % 10007)

print(nums[n])